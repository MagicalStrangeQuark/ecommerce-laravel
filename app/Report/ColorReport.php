<?php

namespace App\Report;

use Illuminate\Support\Facades\Session;

final class ColorReport
{
    /** @var string */
    private const WIDTH = 'WIDTH';

    /** @var string */
    private const FIELDS = 'FIELDS';

    /** @var string */
    private const INFO = 'INFO';

    /** @var string */
    private const NAME = 'NAME';

    /** @var bool */
    private const ACTIVE = 'ACTIVE';

    /** @var string */
    private const FILENAME = 'FILENAME';

    /** @var string */
    private const EXTENSION = 'PDF';

    /** @var string */
    private const HEIGHT = 'HEIGHT';

    /** @var array */
    private const REPORT = [
        self::FIELDS => [
            'id' => [
                self::WIDTH => 10,
                self::ACTIVE => true
            ],
            'cor' => [
                self::WIDTH => 20,
                self::ACTIVE => true
            ],
            'color' => [
                self::WIDTH => 20,
                self::ACTIVE => true
            ],
            'couleur' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'farbe' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'colore' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'tonalidad' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'kleur' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'hexadecimal' => [
                self::WIDTH => 15,
                self::ACTIVE => true
            ],
            'deleted_at' => [
                self::WIDTH => 15,
                self::ACTIVE => false
            ],
            'created_at' => [
                self::WIDTH => 30,
                self::ACTIVE => true
            ],
            'updated_at' => [
                self::WIDTH => 30,
                self::ACTIVE => true
            ],
        ],
        self::INFO => [
            self::NAME => 'COLORS REPORT',
            self::FILENAME => 'ColorsReport',
            self::HEIGHT => 4
        ]
    ];

    /**
     * Render PDF;
     * 
     * @param void
     */
    public static function PDF()
    {
        $pdf = new \FPDF('P');

        $pdf->SetFont('Arial', 'B', 8);
        $pdf->SetMargins(5, 5, 5);
        $pdf->AddPage();

        $pdf->Cell(self::width() / 4, self::read()->{self::INFO}->{self::HEIGHT}, 'RECORDS NUMBER: ' . \App\Colors::all()->count(), true, 0, 'C');
        $pdf->Cell(self::width() / 2, self::read()->{self::INFO}->{self::HEIGHT}, self::read()->{self::INFO}->{self::NAME},         true, 0, 'C');
        $pdf->Cell(self::width() / 4, self::read()->{self::INFO}->{self::HEIGHT}, 'EXPORTED AT: ' . date("Y-m-d H:i:s"),            true, 0, 'C');

        $pdf->Ln(self::read()->{self::INFO}->{self::HEIGHT});

        foreach (self::read()->{self::FIELDS} as $KEY => $INFO) {
            if ($INFO->{self::ACTIVE} === true) {
                $pdf->Cell($INFO->{self::WIDTH}, self::read()->{self::INFO}->{self::HEIGHT}, $KEY, true, 0, false);
            }
        }

        $pdf->Ln(self::read()->{self::INFO}->{self::HEIGHT});

        $pdf->SetFont('Arial', NULL, 8);

        foreach (\App\Colors::all() as $color) {
            foreach (self::read()->{self::FIELDS} as $KEY => $INFO) {
                if ($INFO->{self::ACTIVE} === true) {
                    $pdf->Cell($INFO->{self::WIDTH}, self::read()->{self::INFO}->{self::HEIGHT}, $color->{$KEY}, true, 0, false);
                }
            }

            $pdf->Ln();
        }

        $pdf->Ln(self::read()->{self::INFO}->{self::HEIGHT});

        $pdf->SetFont('Arial', 'B', 8);
        $pdf->Cell(self::width(), self::read()->{self::INFO}->{self::HEIGHT}, 'GENERATED BY @' . self::user()->name, true, 0, 'C');

        $pdf->Output(self::read()->{self::INFO}->{self::FILENAME} . '.' . self::EXTENSION, 'D');
    }

    /**
     * Read.
     * 
     * @param void
     * 
     * @return stdClass
     */
    public static function read(): \stdClass
    {
        return json_decode(json_encode(static::REPORT, JSON_FORCE_OBJECT));
    }

    /**
     * Width.
     * 
     * @param void
     * 
     * @return int
     */
    public static function width(): int
    {
        $x = 0;

        foreach (self::read()->{self::FIELDS} as $INFO) {
            if ($INFO->{self::ACTIVE} === true) {
                $x += (int) $INFO->{self::WIDTH};
            }
        }

        return $x;
    }

    /**
     * User
     * 
     * @param void
     * 
     * @return stdClass
     */
    public static function user(): \stdClass
    {
        return json_decode(json_encode(Session::get(\App\Http\Controllers\UserController::USER_CREDENTIALS), JSON_FORCE_OBJECT));
    }
}
