<?php

namespace App\Report;

class Report
{
    /** @var string */
    public const WIDTH = 'WIDTH';

    /** @var string */
    public const FIELDS = 'FIELDS';

    /** @var string */
    public const INFO = 'INFO';

    /** @var string */
    public const NAME = 'NAME';

    /** @var bool */
    public const ACTIVE = 'ACTIVE';

    /** @var string */
    public const FILENAME = 'FILENAME';

    /** @var string */
    public const EXTENSION = 'PDF';

    /** @var string */
    public const HEIGHT = 'HEIGHT';

    /**
     * Render PDF;
     * 
     * @param void
     */
    public function PDF(\stdClass $data, object $db)
    {
        $pdf = new \FPDF('P');

        $pdf->SetFont('Arial', 'B', 8);
        $pdf->SetMargins(5, 5, 5);
        $pdf->AddPage();

        $width = self::width($data->{self::FIELDS});

        $pdf->Cell($width * 0.25, $data->{self::INFO}->{self::HEIGHT}, 'RECORDS NUMBER: ' . count($db), true, 0, 'C');
        $pdf->Cell($width * 0.50, $data->{self::INFO}->{self::HEIGHT}, $data->{self::INFO}->{self::NAME}, true, 0, 'C');
        $pdf->Cell($width * 0.25, $data->{self::INFO}->{self::HEIGHT}, 'EXPORTED AT: ' . date("Y-m-d H:i:s"), true, 0, 'C');

        $pdf->Ln($data->{self::INFO}->{self::HEIGHT});

        foreach ($data->{self::FIELDS} as $KEY => $INFO) {
            if ($INFO->{self::ACTIVE} === true) {
                $pdf->Cell($INFO->{self::WIDTH}, $data->{self::INFO}->{self::HEIGHT}, $KEY, true, 0, false);
            }
        }

        $pdf->Ln($data->{self::INFO}->{self::HEIGHT});

        $pdf->SetFont('Arial', NULL, 8);

        foreach ($db as $color) {
            foreach ($data->{self::FIELDS} as $KEY => $INFO) {
                if ($INFO->{self::ACTIVE} === true) {
                    $pdf->Cell($INFO->{self::WIDTH}, $data->{self::INFO}->{self::HEIGHT}, $color->{$KEY}, true, 0, false);
                }
            }

            $pdf->Ln();
        }

        $pdf->Ln($data->{self::INFO}->{self::HEIGHT});

        $pdf->SetFont('Arial', 'B', 8);
        $pdf->Cell($width, $data->{self::INFO}->{self::HEIGHT}, 'GENERATED BY @' . \App\Helpers\Utils::user()->name, true, 0, 'C');

        $pdf->Output($data->{self::INFO}->{self::FILENAME} . '.' . self::EXTENSION, 'D');
    }

    /**
     * Get an Instance.
     * 
     * @param void
     * 
     * @return Static
     */
    public static function create(): Self
    {
        return new static();
    }

    /**
     * Width.
     * 
     * @param void
     * 
     * @return int
     */
    public static function width(\stdClass $CONFIG): int
    {
        $x = 0;

        foreach ($CONFIG as $INFO) {
            if ($INFO->{self::ACTIVE} === true) {
                $x += (int) $INFO->{self::WIDTH};
            }
        }

        return $x;
    }
}
